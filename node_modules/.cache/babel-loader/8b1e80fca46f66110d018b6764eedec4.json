{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderPayReducer, orderDetailsReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAdressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAdressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/HP/Desktop/e commas/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderPayReducer","orderDetailsReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAdressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EACIC,qBADJ,QACgC,4BADhC;AAGA,SAASC,WAAT,QAA2B,yBAA3B;AACA,SAASC,gBAAT,EACKC,mBADL,EAEKC,kBAFL,EAGIC,wBAHJ,QAIO,yBAJP;AAOA,SAASC,kBAAT,EACKC,eADL,EAEKC,mBAFL,EAGKC,kBAHL,QAG8B,0BAH9B;AAOA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC5BgB,EAAAA,WAAW,EAAEZ,kBADe;AAE5Ba,EAAAA,cAAc,EAAEZ,qBAFY;AAG5Ba,EAAAA,IAAI,EAAEZ,WAHsB;AAI5Ba,EAAAA,SAAS,EAAEZ,gBAJiB;AAK5Ba,EAAAA,YAAY,EAAEZ,mBALc;AAM5Ba,EAAAA,WAAW,EAAEZ,kBANe;AAO5Ba,EAAAA,iBAAiB,EAAEZ,wBAPS;AAQ5Ba,EAAAA,WAAW,EAAEZ,kBARe;AAS5Ba,EAAAA,YAAY,EAAGX,mBATa;AAU5BY,EAAAA,QAAQ,EAAEb,eAVkB;AAW5Bc,EAAAA,WAAW,EAAEZ;AAXe,CAAD,CAA/B;AAeA,MAAMa,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACS,EADtC;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAC9DH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAD8D,CAAnC,GACS,IADrC;AAGA,MAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAC3EH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAD2E,CAA1C,GACU,EAD5C;AAGA,MAAMK,YAAY,GAAG;AACjBhB,EAAAA,IAAI,EAAE;AACDiB,IAAAA,SAAS,EAAER,oBADV;AAEDS,IAAAA,eAAe,EAAEH;AAFhB,GADW;AAKjBd,EAAAA,SAAS,EAAE;AAACkB,IAAAA,QAAQ,EAAEL;AAAX;AALM,CAArB;AASA,MAAMM,UAAU,GAAC,CAACpC,KAAD,CAAjB;AAEA,MAAMqC,KAAK,GAAGxC,WAAW,CACrBgB,OADqB,EAErBmB,YAFqB,EAGrB/B,mBAAmB,CAAEF,eAAe,CAAC,GAAGqC,UAAJ,CAAjB,CAHE,CAAzB;AAQG,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer, \r\n    productDetailsReducer} from './reducers/productReducers' \r\n\r\nimport { cartReducer} from './reducers/cartReducers' \r\nimport { userLoginReducer,\r\n     userRegisterReducer, \r\n     userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n} from './reducers/userReducers' \r\n\r\n\r\nimport { orderCreateReducer ,\r\n     orderPayReducer,\r\n     orderDetailsReducer,\r\n     orderListMyReducer} from './reducers/orderReducers' \r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails:  orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer \r\n    \r\n})\r\n \r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse\r\n(localStorage.getItem('userInfo')) : null\r\n \r\nconst shippingAdressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse\r\n(localStorage.getItem('shippingAddress')) : {}\r\n \r\nconst initialState = {\r\n    cart: {\r\n         cartItems: cartItemsFromStorage,\r\n         shippingAddress: shippingAdressFromStorage,\r\n        },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n  \r\n}\r\n\r\nconst middleware=[thunk] \r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools( applyMiddleware(...middleware))\r\n    )\r\n\r\n\r\n\r\n   export default store"]},"metadata":{},"sourceType":"module"}