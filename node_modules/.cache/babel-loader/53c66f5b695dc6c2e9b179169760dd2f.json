{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\e commas\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Form, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light  my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\" Price: $\", product.price, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\" Description: \", product.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            varient: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 27\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => setQty(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: x + 1,\n                      children: x + 1\n                    }, x + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 47\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToCartHandler,\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInStock === 0,\n                children: \"Add To Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/e commas/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Form","Col","Image","ListGroup","Card","Button","Rating","Message","Loader","listProductDetails","ProductScreen","history","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Form, Col, Image, ListGroup, Card, Button}from 'react-bootstrap' \r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {listProductDetails} from '../actions/productActions'\r\nconst ProductScreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails= useSelector(state=> state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n    useEffect(() =>{\r\n        dispatch(listProductDetails(match.params.id))\r\n       \r\n    }, [dispatch, match])   \r\n\r\n    const addToCartHandler =() => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n\r\n    }\r\n \r\n    return (\r\n     <>\r\n        <Link className= 'btn btn-light  my-3'to='/'>Go Back\r\n             \r\n        </Link> \r\n        {loading ? <Loader /> : error ? <Message variant = 'danger'>{error}</Message> :(\r\n          <Row>\r\n          <Col md={6}>\r\n          <Image src={product.image} alt={product.name}fluid/>\r\n          </Col>\r\n          <Col md= {3}>\r\n              <ListGroup variant ='flush'>\r\n                  <ListGroup.Item>\r\n                      <h3>{product.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                  <Rating \r\n                  value={product.rating} \r\n                  text= {`${product.numReviews} reviews`}/>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item> Price: ${product.price} </ListGroup.Item>\r\n                  <ListGroup.Item> Description: {product.description} </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                      <ListGroup varient='flush'>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Price:</Col>\r\n                                  <Col>\r\n                                  <strong>${product.price}</strong>\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Status:</Col>\r\n                                  <Col>\r\n                                  {product.countInStock > 0 ?'In Stock': 'Out Of Stock'}\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          {product.countInStock > 0 &&(\r\n                              <ListGroup.Item>\r\n                                  <Row>\r\n                                      <Col>Qty</Col>\r\n                                      <Col>\r\n                                      <Form.Control \r\n                                      as ='select' \r\n                                      value={qty} \r\n                                      onChange={(e)=> setQty(e.target.value)}\r\n                                      >\r\n                                          {\r\n                                          [...Array(product.countInStock).keys()].map((x) => (\r\n                                              <option key={x + 1} value={x +1}>\r\n                                                  {x + 1}\r\n                                              </option>\r\n\r\n                                              ))}\r\n                                          </Form.Control>\r\n                                          </Col>\r\n\r\n                                  </Row>\r\n\r\n                              </ListGroup.Item>\r\n                          )}\r\n\r\n\r\n                          <ListGroup.Item>  \r\n                              <Button \r\n                              onClick={addToCartHandler}\r\n                              className='btn-block'type= 'button'\r\n                              disabled={product.countInStock === 0}>\r\n                               Add To Cart    \r\n                              </Button>\r\n                          </ListGroup.Item>\r\n\r\n                          </ListGroup>  \r\n                    </Card>\r\n                </Col>\r\n      </Row>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}