{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/e commas/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,0BAAzC,EAAqEC,wBAArE,QAAoG,4BAApG;AAEA,OAAO,MAAMC,WAAW,GAAG,CACvBC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAC,EAAZ;AACPC,EAAAA,eAAe,EAAE;AADV,CADe,EAGrBC,MAHqB,KAIhB;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,YAAMU,IAAI,GAAGF,MAAM,CAACG,OAApB;AAGA,YAAMC,SAAS,GAAEP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAjB;;AAEI,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC9BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD/B;AAFP,SAAP;AAOH,OARD,MAQM;AACF,eAAO,EACH,GAAGT,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,SAAP;AAIH;;AAED,SAAKT,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAFP,OAAP;;AAIJ,SAAKT,0BAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFrB,OAAP;;AAIJ,SAAKR,wBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFnB,OAAP;;AAIR;AACI,aAAON,KAAP;AAtCZ;AAwCH,CA7CM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems:[], \r\n     shippingAddress: {} },\r\n      action\r\n      ) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n\r\n            const existItem= state.cartItems.find((x) => x.product === item.product)\r\n\r\n                if (existItem) {\r\n                    return {\r\n                        ...state,\r\n                        cartItems:state.cartItems.map((x) => \r\n                        x.product === existItem.product ? item : x\r\n                        ),\r\n                    }\r\n\r\n                } else{\r\n                    return {\r\n                        ...state,\r\n                        cartItems: [...state.cartItems, item]\r\n                    }\r\n                }\r\n\r\n                case CART_REMOVE_ITEM:\r\n                    return {\r\n                        ...state,\r\n                        cartItems:state.cartItems.filter(x => x.product !== action.payload),\r\n                    }\r\n                case CART_SAVE_SHIPPING_ADDRESS:\r\n                    return {\r\n                        ...state,\r\n                        shippingAddress: action.payload,\r\n                    }\r\n                case CART_SAVE_PAYMENT_METHOD:\r\n                    return {\r\n                        ...state,\r\n                        paymentMethod: action.payload,\r\n                    }\r\n            default:\r\n                return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}